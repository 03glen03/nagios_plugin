#!/bin/bash

REDIS_HOST="localhost"
REDIS_PORT="10379"

# Get Redis server info
REDIS_INFO=$(redis-cli -h $REDIS_HOST -p $REDIS_PORT info)

# Check if Redis connection failed
if [ $? -ne 0 ]; then
    echo "CRITICAL: Unable to connect to Redis server"
    exit 2
fi

# Extract stats
UPTIME=$(redis-cli -h $REDIS_HOST -p $REDIS_PORT info | grep uptime_in_seconds | awk -F':' '{print $2}')
USED_MEMORY=$(redis-cli -h $REDIS_HOST -p $REDIS_PORT info | grep used_memory: | awk -F':' '{print $2}')
TOTAL_MEMORY=$(redis-cli -h $REDIS_HOST -p $REDIS_PORT info | grep total_system_memory: | awk -F':' '{print $2}')
CONNECTIONS=$(redis-cli -h $REDIS_HOST -p $REDIS_PORT info | grep connected_clients | awk -F':' '{print $2}')

# Check if any stats are missing
if [ -z "$UPTIME" ] || [ -z "$USED_MEMORY" ] || [ -z "$TOTAL_MEMORY" ] || [ -z "$CONNECTIONS" ]; then
    echo "UNKNOWN: Unable to retrieve Redis stats"
    exit 3
fi

# Calculate memory usage percentage and utilization in MB
MEMORY_PERCENTAGE=$(awk -v used_mem="$USED_MEMORY" -v total_mem="$TOTAL_MEMORY" 'BEGIN {printf "%.2f", used_mem/total_mem*100}')
MEMORY_UTILIZATION_MB=$(awk -v used_mem="$USED_MEMORY" 'BEGIN {printf "%.2f", used_mem/1024/1024}')

# Check if memory percentage calculation failed
if [ -z "$MEMORY_PERCENTAGE" ] || [ -z "$MEMORY_UTILIZATION_MB" ]; then
    echo "UNKNOWN: Unable to calculate memory usage"
    exit 3
fi

# Set warning and critical thresholds for memory usage percentage
WARNING_THRESHOLD=80
CRITICAL_THRESHOLD=90

# Check status
if (( $(echo "$MEMORY_PERCENTAGE >= $CRITICAL_THRESHOLD" | bc -l) )); then
    echo "CRITICAL: Redis memory usage is ${MEMORY_PERCENTAGE}% (${MEMORY_UTILIZATION_MB} MB)"
    exit 2
elif (( $(echo "$MEMORY_PERCENTAGE >= $WARNING_THRESHOLD" | bc -l) )); then
    echo "WARNING: Redis memory usage is ${MEMORY_PERCENTAGE}% (${MEMORY_UTILIZATION_MB} MB)"
    exit 1
else
    UPTIME_MIN=$(awk -v uptime="$UPTIME" 'BEGIN {printf "%.2f", uptime/60}')
    echo "OK: Redis server stats are normal. Uptime: ${UPTIME_MIN} minutes, Memory usage: ${MEMORY_PERCENTAGE}% (${MEMORY_UTILIZATION_MB} MB), Connections: ${CONNECTIONS}"
    exit 0
fi

